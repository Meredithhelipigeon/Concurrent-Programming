q2b(i)
The destructors are different between the original and transformed program.
In the transformed program, we call jump function directly and dont call the destructor functions.
But in the original program, try-catch-box helps us handle the destruction jobs therefore destructors are called.

q2b(ii)
Experiement Without compiler optimization:

We compare original program with q2throwcatch, q2longjmp
Parameters we use: 12 12 103 28
./throwcatch         | ./longjmp
15.25u 0.00s 0:15.27 | 4.38u 0.00s 0:04.39
15.20u 0.00s 0:15.21 | 4.42u 0.00s 0:04.88
16.36u 0.00s 0:16.37 | 4.58u 0.00s 0:04.59
14.78u 0.00s 0:14.79 | 4.39u 0.00s 0:04.40

q2b(iii)
Based on the experiment result, the tranformed code is on average 11s quicker than the original code,
which is 30% execution time of the original. The performance improvement of transformed code is very big. 
The reason behind it is that when we use try-catch box and the error is raised, the computer has to search 
about which catch-box to handle the error. It takes O(n).

q2b(iv)
Experiement With compiler optimization:

We compare original program with q2throwcatch, q2longjmp
Parameters we use: 12 12 103 28
./throwcatch         | ./longjmp  
15.53u 0.00s 0:15.65 | 2.87u 0.00s 0:02.92
15.80u 0.00s 0:15.83 | 2.94u 0.00s 0:03.03
15.76u 0.00s 0:15.82 | 2.85u 0.00s 0:02.86
15.76u 0.00s 0:15.79 | 2.88u 0.00s 0:02.88

Based on the experiment result, the tranformed code is on average 12s quicker than the original code,
which is 19% execution time of the original.
